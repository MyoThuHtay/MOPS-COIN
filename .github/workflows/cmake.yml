name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:



jobs:
  release_ubuntu:
    name: Ubuntu Release
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Create Build Directory
      run: cmake -E make_directory ${{github.workspace}}/build 
    - name: Install Packages
      run: |
        sudo apt-get update -y
        sudo apt-get install build-essential gcc make perl dkms -y
        sudo apt-get install git -y
        sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils 
        sudo apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev 
        sudo apt-get install libboost-all-dev -y
        sudo apt-get install software-properties-common
        sudo apt-get update
        sudo apt-get install libminiupnpc-dev
        sudo apt-get install libzmq3-dev
        sudo apt-get install openssl1.0
        sudo apt-get install libssl1.0-dev 
    
    - name: Configure cmake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/src/makefile.unix
   

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config Release

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

